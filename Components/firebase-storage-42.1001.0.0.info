{"Name":"Firebase - Storage","Id":3326,"Alias":"firebase-storage","Description":"Firebase - Storage\n==========================\n\nFirebase Storage is built for app developers who need to store and serve user-generated content, such as photos or videos.\n\nFirebase Storage adds Google security to file uploads and downloads for your Firebase apps, regardless of network quality. You can use it to store images, audio, video, or other user-generated content. Firebase Storage is backed by Google Cloud Storage, a powerful, simple, and cost-effective object storage service.","Version":"42.1001.0.0","Summary":"Firebase Storage is built for app developers who need to store and serve user-generated content, such as photos or videos.","QuickStart":"Get Started with Firebase Storage for Android\n\nFirebase Storage is built for app developers who need to store and serve user-generated content, such as photos or videos.\n\nConfiguring Firebase\n--------------------\n\n1. Create a Firebase project in the [Firebase Console][1], if you don\u0027t already have one setup.  If you have an existing Google project associated with your mobile app, you can use the **Import Google Project** option.  Otherwise, use the **Create New Project** option.\n\n2. Click **Add Firebase to your Android app**.  \n\n  a. Enter your app\u0027s ***Package Name***\n  \n  b. Enter the SHA-1 Hash for your signing certificate.  If you don\u0027t know how to find this, [check out this guide][2]\n\n3. Click **Add App** and download the ***google-services.json*** file generated for you.\n\n4. Add the ***google-services.json*** file to your Xamarin.Android project.\n\n5. Set the *Build Action* for your ***google-services.json*** file to ***GoogleServicesJson***.  \n\nThe build process will take the api keys and values from your ***google-services.json*** and translate them into the correct resource string key/value pairs in your app.\n\n\n\n\n\n\n\n### Create a singleton instance\n\nThe first step in accessing your storage bucket is to create an instance of FirebaseStorage:\n\n```csharp\nvar storage = FirebaseStorage.Instance;\n```\n\nYour files are stored in a Firebase Storage bucket. The files in this bucket are presented in a hierarchical structure, just like the file system on your local hard disk. By creating a reference to a file, your app gains access to it. These references can then be used to upload or download data, get or update metadata or delete the file. A reference can either point to a specific file or to a higher level in the hierarchy.\n\n\n\n### Create a Reference\n\nCreate a reference to upload, download, or delete a file, or to get or update its metadata. A reference can be thought of as a pointer to a file in the cloud. References are lightweight, so you can create as many as you need. They are also reusable for multiple operations.\n\nReferences are created using the `FirebaseStorage` singleton instance provided by the SDK by calling its `GetReferenceFromUrl` method and passing in a URL of the form `gs://\u003cyour-firebase-storage-bucket\u003e`. You can find this URL the Storage section of the Firebase console.\n\n```csharp\n// Create a storage reference from our app\nvar storageRef = storage.GetReferenceFromUrl (\"gs://\u003cyour-bucket-name\u003e\");\n```\n\nYou can create a reference to a location lower in the tree, say `images/space.jpg` by using the `GetChild ()` method on an existing reference.\n\n```csharp\n// Create a child reference\n// imagesRef now points to \"images\"\nvar imagesRef = storageRef.Child (\"images\");\n\n// Child references can also take paths\n// spaceRef now points to \"users/me/profile.png\n// imagesRef still points to \"images\"\nvar spaceRef = storageRef.Child (\"images/space.jpg\");\n```\n\n\n### Navigate with References\n\nYou can also use the `Parent` and `Root properties to navigate up in our file hierarchy. `Parent` navigates up one level, while `Root` navigates all the way to the top.\n\n```csharp\n// Parent allows us to move our reference to point to\n// imagesRef now points to \u0027images\u0027\nimagesRef = spaceRef.Parent;\n\n// Root allows us to move all the way back to the top of our bucket\n// rootRef now points to the root\nvar rootRef = spaceRef.Root;\n```\n\n`Child()`, `Parent`, and `Root` can be chained together multiple times, as each returns a reference. But calling `Root.Parent` returns null.\n\n```csharp\n// References can be chained together multiple times\n// earthRef points to \u0027images/earth.jpg\u0027\nvar earthRef = spaceRef.Parent.Child (\"earth.jpg\");\n\n// nullRef is null, since the parent of root is null\nvar nullRef = spaceRef.Root.Parent;\n```\n\n\n\n### Reference Properties\n\nYou can inspect references to better understand the files they point to using the `Path, `Name`, and `Bucket` properties. These properties get the file\u0027s full path, name and bucket.\n\n```csharp\n// Reference\u0027s path is: \"images/space.jpg\"\n// This is analogous to a file path on disk\nspaceRef.Path;\n\n// Reference\u0027s name is the last segment of the full path: \"space.jpg\"\n// This is analogous to the file name\nspaceRef.Name;\n\n// Reference\u0027s bucket is the name of the storage bucket that the files are stored in\nspaceRef.Bucket;\n```\n\n\n### Limitations on References\n\nReference paths and names can contain any sequence of valid Unicode characters, but certain restrictions are imposed including:\n\nTotal length of reference.FullPath must be between 1 and 1024 bytes when UTF-8 encoded.\n\nNo Carriage Return or Line Feed characters.\nAvoid using #, [, ], *, or ?, as these do not work well with other tools.\n\n\nSamples\n=======\n\nYou can find a Sample Application within each Firebase component.  The sample will demonstrate the necessary configuration and some basic API usages.\n\n\n\n\n\n\nLearn More\n==========\n\nYou can learn more about the various Firebase SDKs \u0026 APIs by visiting the official [Firebase][5] documentation\n\n\n\n\n[1]: https://console.developers.google.com/ \"Google Developers Console\"\n[2]: https://developer.xamarin.com/guides/android/deployment,_testing,_and_metrics/MD5_SHA1/ \"Finding your SHA-1 Fingerprints\"\n[3]: https://developers.google.com/android/ \"Google APIs for Android\"\n[4]: https://firebase.google.com/console/ \"Firebase Developer Console\"\n[5]: https://firebase.google.com/ \"Firebase\"\n","Hash":"e84bf2ac4547b3ceeb03cb92396965e8","TargetPlatforms":["android"],"TrialHash":null}